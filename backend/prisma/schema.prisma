// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  STAFF
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique()
  phoneNumber     String?
  address         String?
  role            Role      @default(USER)
  borrowedBooks   BorrowedBook[]
  password        String
  createdAt       DateTime  @default(now())
}

model Book {
  id            Int            @id @default(autoincrement())
  title         String
  author        Author         @relation(fields: [authorId], references: [id])
  authorId      Int
  category      Category?      @relation(fields: [categoryId], references: [id])
  categoryId    Int?
  totalCopies   Int
  available     Int
  borrowedBooks BorrowedBook[]
  createdAt     DateTime       @default(now())
}

model Author {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  books Book[]
}

model BorrowedBook {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     Int
  borrowDate DateTime @default(now())
  returnDate DateTime?
  returned   Boolean  @default(false)
}